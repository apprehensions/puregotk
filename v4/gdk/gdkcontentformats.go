// Package gdk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gdk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
)

// A `GdkContentFormatsBuilder` is an auxiliary struct used to create
// new `GdkContentFormats`, and should not be kept around.
type ContentFormatsBuilder struct {
}

// An opaque type representing a list of files.
type FileList struct {
}

var xContentFormatsParse func(string) *ContentFormats

// Parses the given @string into `GdkContentFormats` and
// returns the formats.
//
// Strings printed via [method@Gdk.ContentFormats.to_string]
// can be read in again successfully using this function.
//
// If @string does not describe valid content formats, %NULL
// is returned.
func ContentFormatsParse(StringVar string) *ContentFormats {

	return xContentFormatsParse(StringVar)

}

var xInternMimeType func(string) string

// Canonicalizes the given mime type and interns the result.
//
// If @string is not a valid mime type, %NULL is returned instead.
// See RFC 2048 for the syntax if mime types.
func InternMimeType(StringVar string) string {

	return xInternMimeType(StringVar)

}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GDK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}
	core.PuregoSafeRegister(&xContentFormatsParse, lib, "gdk_content_formats_parse")
	core.PuregoSafeRegister(&xInternMimeType, lib, "gdk_intern_mime_type")

}
