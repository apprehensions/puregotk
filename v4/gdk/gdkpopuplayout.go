// Package gdk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gdk

// The `GdkPopupLayout` struct contains information that is
// necessary position a [iface@Gdk.Popup] relative to its parent.
//
// The positioning requires a negotiation with the windowing system,
// since it depends on external constraints, such as the position of
// the parent surface, and the screen dimensions.
//
// The basic ingredients are a rectangle on the parent surface,
// and the anchor on both that rectangle and the popup. The anchors
// specify a side or corner to place next to each other.
//
// ![Popup anchors](popup-anchors.png)
//
// For cases where placing the anchors next to each other would make
// the popup extend offscreen, the layout includes some hints for how
// to resolve this problem. The hints may suggest to flip the anchor
// position to the other side, or to 'slide' the popup along a side,
// or to resize it.
//
// ![Flipping popups](popup-flip.png)
//
// ![Sliding popups](popup-slide.png)
//
// These hints may be combined.
//
// Ultimatively, it is up to the windowing system to determine the position
// and size of the popup. You can learn about the result by calling
// [method@Gdk.Popup.get_position_x], [method@Gdk.Popup.get_position_y],
// [method@Gdk.Popup.get_rect_anchor] and [method@Gdk.Popup.get_surface_anchor]
// after the popup has been presented. This can be used to adjust the rendering.
// For example, [class@Gtk.Popover] changes its arrow position accordingly.
// But you have to be careful avoid changing the size of the popover, or it
// has to be presented again.
type PopupLayout struct {
}

// Positioning hints for aligning a surface relative to a rectangle.
//
// These hints determine how the surface should be positioned in the case that
// the surface would fall off-screen if placed in its ideal position.
//
// For example, %GDK_ANCHOR_FLIP_X will replace %GDK_GRAVITY_NORTH_WEST with
// %GDK_GRAVITY_NORTH_EAST and vice versa if the surface extends beyond the left
// or right edges of the monitor.
//
// If %GDK_ANCHOR_SLIDE_X is set, the surface can be shifted horizontally to fit
// on-screen. If %GDK_ANCHOR_RESIZE_X is set, the surface can be shrunken
// horizontally to fit.
//
// In general, when multiple flags are set, flipping should take precedence over
// sliding, which should take precedence over resizing.
type AnchorHints int

const (

	// allow flipping anchors horizontally
	AnchorFlipXValue AnchorHints = 1
	// allow flipping anchors vertically
	AnchorFlipYValue AnchorHints = 2
	// allow sliding surface horizontally
	AnchorSlideXValue AnchorHints = 4
	// allow sliding surface vertically
	AnchorSlideYValue AnchorHints = 8
	// allow resizing surface horizontally
	AnchorResizeXValue AnchorHints = 16
	// allow resizing surface vertically
	AnchorResizeYValue AnchorHints = 32
	// allow flipping anchors on both axes
	AnchorFlipValue AnchorHints = 3
	// allow sliding surface on both axes
	AnchorSlideValue AnchorHints = 12
	// allow resizing surface on both axes
	AnchorResizeValue AnchorHints = 48
)
