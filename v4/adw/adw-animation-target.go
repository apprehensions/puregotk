// Package adw was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package adw

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

// Prototype for animation targets based on user callbacks.
type AnimationTargetFunc func(float64, uintptr)

type AnimationTargetClass struct {
}

type CallbackAnimationTargetClass struct {
}

type PropertyAnimationTargetClass struct {
}

// Represents a value [class@Animation] can animate.
type AnimationTarget struct {
	gobject.Object
}

func AnimationTargetNewFromInternalPtr(ptr uintptr) *AnimationTarget {
	cls := &AnimationTarget{}
	cls.Ptr = ptr
	return cls
}

func (c *AnimationTarget) GoPointer() uintptr {
	return c.Ptr
}

func (c *AnimationTarget) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

// An [class@AnimationTarget] that calls a given callback during the
// animation.
type CallbackAnimationTarget struct {
	AnimationTarget
}

func CallbackAnimationTargetNewFromInternalPtr(ptr uintptr) *CallbackAnimationTarget {
	cls := &CallbackAnimationTarget{}
	cls.Ptr = ptr
	return cls
}

var xNewCallbackAnimationTarget func(uintptr, uintptr, uintptr) uintptr

// Creates a new `AdwAnimationTarget` that calls the given @callback during
// the animation.
func NewCallbackAnimationTarget(CallbackVar AnimationTargetFunc, UserDataVar uintptr, DestroyVar glib.DestroyNotify) *AnimationTarget {
	NewCallbackAnimationTargetPtr := xNewCallbackAnimationTarget(purego.NewCallback(CallbackVar), UserDataVar, purego.NewCallback(DestroyVar))
	if NewCallbackAnimationTargetPtr == 0 {
		return nil
	}

	NewCallbackAnimationTargetCls := &AnimationTarget{}
	NewCallbackAnimationTargetCls.Ptr = NewCallbackAnimationTargetPtr
	return NewCallbackAnimationTargetCls
}

func (c *CallbackAnimationTarget) GoPointer() uintptr {
	return c.Ptr
}

func (c *CallbackAnimationTarget) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

// An [class@AnimationTarget] changing the value of a property of a
// [class@GObject.Object] instance.
type PropertyAnimationTarget struct {
	AnimationTarget
}

func PropertyAnimationTargetNewFromInternalPtr(ptr uintptr) *PropertyAnimationTarget {
	cls := &PropertyAnimationTarget{}
	cls.Ptr = ptr
	return cls
}

var xNewPropertyAnimationTarget func(uintptr, string) uintptr

// Creates a new `AdwPropertyAnimationTarget` for the @property_name property on
// @object.
func NewPropertyAnimationTarget(ObjectVar *gobject.Object, PropertyNameVar string) *AnimationTarget {
	NewPropertyAnimationTargetPtr := xNewPropertyAnimationTarget(ObjectVar.GoPointer(), PropertyNameVar)
	if NewPropertyAnimationTargetPtr == 0 {
		return nil
	}

	NewPropertyAnimationTargetCls := &AnimationTarget{}
	NewPropertyAnimationTargetCls.Ptr = NewPropertyAnimationTargetPtr
	return NewPropertyAnimationTargetCls
}

var xNewForPspecPropertyAnimationTarget func(uintptr, uintptr) uintptr

// Creates a new `AdwPropertyAnimationTarget` for the @pspec property on
// @object.
func NewForPspecPropertyAnimationTarget(ObjectVar *gobject.Object, PspecVar *gobject.ParamSpec) *AnimationTarget {
	NewForPspecPropertyAnimationTargetPtr := xNewForPspecPropertyAnimationTarget(ObjectVar.GoPointer(), PspecVar.GoPointer())
	if NewForPspecPropertyAnimationTargetPtr == 0 {
		return nil
	}

	NewForPspecPropertyAnimationTargetCls := &AnimationTarget{}
	NewForPspecPropertyAnimationTargetCls.Ptr = NewForPspecPropertyAnimationTargetPtr
	return NewForPspecPropertyAnimationTargetCls
}

var xPropertyAnimationTargetGetObject func(uintptr) uintptr

// Gets the object animated by @self.
//
// The `AdwPropertyAnimationTarget` instance does not hold a strong reference on
// the object; make sure the object is kept alive throughout the target's
// lifetime.
func (x *PropertyAnimationTarget) GetObject() *gobject.Object {

	GetObjectPtr := xPropertyAnimationTargetGetObject(x.GoPointer())
	if GetObjectPtr == 0 {
		return nil
	}

	gobject.IncreaseRef(GetObjectPtr)

	GetObjectCls := &gobject.Object{}
	GetObjectCls.Ptr = GetObjectPtr
	return GetObjectCls

}

var xPropertyAnimationTargetGetPspec func(uintptr) uintptr

// Gets the `GParamSpec` of the property animated by @self.
func (x *PropertyAnimationTarget) GetPspec() *gobject.ParamSpec {

	GetPspecPtr := xPropertyAnimationTargetGetPspec(x.GoPointer())
	if GetPspecPtr == 0 {
		return nil
	}

	gobject.IncreaseRef(GetPspecPtr)

	GetPspecCls := &gobject.ParamSpec{}
	GetPspecCls.Ptr = GetPspecPtr
	return GetPspecCls

}

func (c *PropertyAnimationTarget) GoPointer() uintptr {
	return c.Ptr
}

func (c *PropertyAnimationTarget) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("ADW"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xNewCallbackAnimationTarget, lib, "adw_callback_animation_target_new")

	core.PuregoSafeRegister(&xNewPropertyAnimationTarget, lib, "adw_property_animation_target_new")
	core.PuregoSafeRegister(&xNewForPspecPropertyAnimationTarget, lib, "adw_property_animation_target_new_for_pspec")

	core.PuregoSafeRegister(&xPropertyAnimationTargetGetObject, lib, "adw_property_animation_target_get_object")
	core.PuregoSafeRegister(&xPropertyAnimationTargetGetPspec, lib, "adw_property_animation_target_get_pspec")

}
