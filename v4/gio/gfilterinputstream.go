// Package gio was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gio

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

type FilterInputStreamClass struct {
	ParentClass uintptr
}

// Base class for input stream implementations that perform some
// kind of filtering operation on a base stream. Typical examples
// of filtering operations are character set conversion, compression
// and byte order flipping.
type FilterInputStream struct {
	InputStream
}

func FilterInputStreamNewFromInternalPtr(ptr uintptr) *FilterInputStream {
	cls := &FilterInputStream{}
	cls.Ptr = ptr
	return cls
}

var xFilterInputStreamGetBaseStream func(uintptr) uintptr

// Gets the base stream for the filter stream.
func (x *FilterInputStream) GetBaseStream() *InputStream {

	GetBaseStreamPtr := xFilterInputStreamGetBaseStream(x.GoPointer())
	if GetBaseStreamPtr == 0 {
		return nil
	}

	gobject.IncreaseRef(GetBaseStreamPtr)

	GetBaseStreamCls := &InputStream{}
	GetBaseStreamCls.Ptr = GetBaseStreamPtr
	return GetBaseStreamCls

}

var xFilterInputStreamGetCloseBaseStream func(uintptr) bool

// Returns whether the base stream will be closed when @stream is
// closed.
func (x *FilterInputStream) GetCloseBaseStream() bool {

	return xFilterInputStreamGetCloseBaseStream(x.GoPointer())

}

var xFilterInputStreamSetCloseBaseStream func(uintptr, bool)

// Sets whether the base stream will be closed when @stream is closed.
func (x *FilterInputStream) SetCloseBaseStream(CloseBaseVar bool) {

	xFilterInputStreamSetCloseBaseStream(x.GoPointer(), CloseBaseVar)

}

func (c *FilterInputStream) GoPointer() uintptr {
	return c.Ptr
}

func (c *FilterInputStream) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GIO"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xFilterInputStreamGetBaseStream, lib, "g_filter_input_stream_get_base_stream")
	core.PuregoSafeRegister(&xFilterInputStreamGetCloseBaseStream, lib, "g_filter_input_stream_get_close_base_stream")
	core.PuregoSafeRegister(&xFilterInputStreamSetCloseBaseStream, lib, "g_filter_input_stream_set_close_base_stream")

}
