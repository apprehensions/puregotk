// Package gio was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gio

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

// Class structure for #GDBusObjectProxy.
type DBusObjectProxyClass struct {
	ParentClass uintptr

	Padding uintptr
}

type DBusObjectProxyPrivate struct {
}

// A #GDBusObjectProxy is an object used to represent a remote object
// with one or more D-Bus interfaces. Normally, you don't instantiate
// a #GDBusObjectProxy yourself - typically #GDBusObjectManagerClient
// is used to obtain it.
type DBusObjectProxy struct {
	gobject.Object
}

func DBusObjectProxyNewFromInternalPtr(ptr uintptr) *DBusObjectProxy {
	cls := &DBusObjectProxy{}
	cls.Ptr = ptr
	return cls
}

var xNewDBusObjectProxy func(uintptr, string) uintptr

// Creates a new #GDBusObjectProxy for the given connection and
// object path.
func NewDBusObjectProxy(ConnectionVar *DBusConnection, ObjectPathVar string) *DBusObjectProxy {
	NewDBusObjectProxyPtr := xNewDBusObjectProxy(ConnectionVar.GoPointer(), ObjectPathVar)
	if NewDBusObjectProxyPtr == 0 {
		return nil
	}

	NewDBusObjectProxyCls := &DBusObjectProxy{}
	NewDBusObjectProxyCls.Ptr = NewDBusObjectProxyPtr
	return NewDBusObjectProxyCls
}

var xDBusObjectProxyGetConnection func(uintptr) uintptr

// Gets the connection that @proxy is for.
func (x *DBusObjectProxy) GetConnection() *DBusConnection {

	GetConnectionPtr := xDBusObjectProxyGetConnection(x.GoPointer())
	if GetConnectionPtr == 0 {
		return nil
	}

	gobject.IncreaseRef(GetConnectionPtr)

	GetConnectionCls := &DBusConnection{}
	GetConnectionCls.Ptr = GetConnectionPtr
	return GetConnectionCls

}

func (c *DBusObjectProxy) GoPointer() uintptr {
	return c.Ptr
}

func (c *DBusObjectProxy) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

// Gets the D-Bus interface with name @interface_name associated with
// @object, if any.
func (x *DBusObjectProxy) GetInterface(InterfaceNameVar string) *DBusInterfaceBase {

	GetInterfacePtr := XGDbusObjectGetInterface(x.GoPointer(), InterfaceNameVar)
	if GetInterfacePtr == 0 {
		return nil
	}

	GetInterfaceCls := &DBusInterfaceBase{}
	GetInterfaceCls.Ptr = GetInterfacePtr
	return GetInterfaceCls

}

// Gets the D-Bus interfaces associated with @object.
func (x *DBusObjectProxy) GetInterfaces() *glib.List {

	return XGDbusObjectGetInterfaces(x.GoPointer())

}

// Gets the object path for @object.
func (x *DBusObjectProxy) GetObjectPath() string {

	return XGDbusObjectGetObjectPath(x.GoPointer())

}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GIO"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xNewDBusObjectProxy, lib, "g_dbus_object_proxy_new")

	core.PuregoSafeRegister(&xDBusObjectProxyGetConnection, lib, "g_dbus_object_proxy_get_connection")

}
