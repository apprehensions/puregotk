// Package gsk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gsk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
)

var xSerializationErrorQuark func() glib.Quark

func SerializationErrorQuark() glib.Quark {

	return xSerializationErrorQuark()

}

type NglRenderer struct {
	Renderer
}

func NglRendererNewFromInternalPtr(ptr uintptr) *NglRenderer {
	cls := &NglRenderer{}
	cls.Ptr = ptr
	return cls
}

var xNewNglRenderer func() uintptr

// Same as gsk_gl_renderer_new().
func NewNglRenderer() *Renderer {
	NewNglRendererPtr := xNewNglRenderer()
	if NewNglRendererPtr == 0 {
		return nil
	}

	NewNglRendererCls := &Renderer{}
	NewNglRendererCls.Ptr = NewNglRendererPtr
	return NewNglRendererCls
}

func (c *NglRenderer) GoPointer() uintptr {
	return c.Ptr
}

func (c *NglRenderer) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GSK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}
	core.PuregoSafeRegister(&xSerializationErrorQuark, lib, "gsk_serialization_error_quark")

	core.PuregoSafeRegister(&xNewNglRenderer, lib, "gsk_ngl_renderer_new")

}
