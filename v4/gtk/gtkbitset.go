// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
)

// An opaque, stack-allocated struct for iterating
// over the elements of a `GtkBitset`.
//
// Before a `GtkBitsetIter` can be used, it needs to be initialized with
// [func@Gtk.BitsetIter.init_first], [func@Gtk.BitsetIter.init_last]
// or [func@Gtk.BitsetIter.init_at].
type BitsetIter struct {
	PrivateData uintptr
}

var xBitsetIterInitAt func(*BitsetIter, *Bitset, uint, uint) bool

// Initializes @iter to point to @target.
//
// If @target is not found, finds the next value after it.
// If no value &gt;= @target exists in @set, this function returns %FALSE.
func BitsetIterInitAt(IterVar *BitsetIter, SetVar *Bitset, TargetVar uint, ValueVar uint) bool {

	cret := xBitsetIterInitAt(IterVar, SetVar, TargetVar, ValueVar)
	return cret
}

var xBitsetIterInitFirst func(*BitsetIter, *Bitset, uint) bool

// Initializes an iterator for @set and points it to the first
// value in @set.
//
// If @set is empty, %FALSE is returned and @value is set to %G_MAXUINT.
func BitsetIterInitFirst(IterVar *BitsetIter, SetVar *Bitset, ValueVar uint) bool {

	cret := xBitsetIterInitFirst(IterVar, SetVar, ValueVar)
	return cret
}

var xBitsetIterInitLast func(*BitsetIter, *Bitset, uint) bool

// Initializes an iterator for @set and points it to the last
// value in @set.
//
// If @set is empty, %FALSE is returned.
func BitsetIterInitLast(IterVar *BitsetIter, SetVar *Bitset, ValueVar uint) bool {

	cret := xBitsetIterInitLast(IterVar, SetVar, ValueVar)
	return cret
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}
	core.PuregoSafeRegister(&xBitsetIterInitAt, lib, "gtk_bitset_iter_init_at")
	core.PuregoSafeRegister(&xBitsetIterInitFirst, lib, "gtk_bitset_iter_init_first")
	core.PuregoSafeRegister(&xBitsetIterInitLast, lib, "gtk_bitset_iter_init_last")

}
