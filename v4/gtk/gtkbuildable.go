// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
)

// The `GtkBuildableIface` interface contains methods that are
// necessary to allow `GtkBuilder` to construct an object from
// a `GtkBuilder` UI definition.
type BuildableIface struct {
	GIface uintptr
}

// An opaque context struct for `GtkBuildableParser`.
type BuildableParseContext struct {
}

// A sub-parser for `GtkBuildable` implementations.
type BuildableParser struct {
	Padding uintptr
}

// `GtkBuildable` allows objects to extend and customize their deserialization
// from ui files.
//
// The interface includes methods for setting names and properties of objects,
// parsing custom tags and constructing child objects.
//
// The `GtkBuildable` interface is implemented by all widgets and
// many of the non-widget objects that are provided by GTK. The
// main user of this interface is [class@Gtk.Builder]. There should be
// very little need for applications to call any of these functions directly.
//
// An object only needs to implement this interface if it needs to extend the
// `GtkBuilder` XML format or run any extra routines at deserialization time.
type Buildable interface {
	GoPointer() uintptr
	SetGoPointer(uintptr)
	GetBuildableId() string
}
type BuildableBase struct {
	Ptr uintptr
}

func (x *BuildableBase) GoPointer() uintptr {
	return x.Ptr
}

func (x *BuildableBase) SetGoPointer(ptr uintptr) {
	x.Ptr = ptr
}

// Gets the ID of the @buildable object.
//
// `GtkBuilder` sets the name based on the ID attribute
// of the &lt;object&gt; tag used to construct the @buildable.
func (x *BuildableBase) GetBuildableId() string {

	return XGtkBuildableGetBuildableId(x.GoPointer())

}

var XGtkBuildableGetBuildableId func(uintptr) string

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&XGtkBuildableGetBuildableId, lib, "gtk_buildable_get_buildable_id")

}
