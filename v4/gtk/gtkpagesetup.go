// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

// A `GtkPageSetup` object stores the page size, orientation and margins.
//
// The idea is that you can get one of these from the page setup dialog
// and then pass it to the `GtkPrintOperation` when printing.
// The benefit of splitting this out of the `GtkPrintSettings` is that
// these affect the actual layout of the page, and thus need to be set
// long before user prints.
//
// ## Margins
//
// The margins specified in this object are the “print margins”, i.e. the
// parts of the page that the printer cannot print on. These are different
// from the layout margins that a word processor uses; they are typically
// used to determine the minimal size for the layout margins.
//
// To obtain a `GtkPageSetup` use [ctor@Gtk.PageSetup.new] to get the defaults,
// or use [func@Gtk.print_run_page_setup_dialog] to show the page setup dialog
// and receive the resulting page setup.
//
// ## A page setup dialog
//
// ```c
// static GtkPrintSettings *settings = NULL;
// static GtkPageSetup *page_setup = NULL;
//
// static void
// do_page_setup (void)
//
//	{
//	  GtkPageSetup *new_page_setup;
//
//	  if (settings == NULL)
//	    settings = gtk_print_settings_new ();
//
//	  new_page_setup = gtk_print_run_page_setup_dialog (GTK_WINDOW (main_window),
//	                                                    page_setup, settings);
//
//	  if (page_setup)
//	    g_object_unref (page_setup);
//
//	  page_setup = new_page_setup;
//	}
//
// ```
type PageSetup struct {
	gobject.Object
}

func PageSetupNewFromInternalPtr(ptr uintptr) *PageSetup {
	cls := &PageSetup{}
	cls.Ptr = ptr
	return cls
}

var xNewPageSetup func() uintptr

// Creates a new `GtkPageSetup`.
func NewPageSetup() *PageSetup {
	NewPageSetupPtr := xNewPageSetup()
	if NewPageSetupPtr == 0 {
		return nil
	}

	NewPageSetupCls := &PageSetup{}
	NewPageSetupCls.Ptr = NewPageSetupPtr
	return NewPageSetupCls
}

var xNewFromFilePageSetup func(string) uintptr

// Reads the page setup from the file @file_name.
//
// Returns a new `GtkPageSetup` object with the restored
// page setup, or %NULL if an error occurred.
// See [method@Gtk.PageSetup.to_file].
func NewFromFilePageSetup(FileNameVar string) *PageSetup {
	NewFromFilePageSetupPtr := xNewFromFilePageSetup(FileNameVar)
	if NewFromFilePageSetupPtr == 0 {
		return nil
	}

	NewFromFilePageSetupCls := &PageSetup{}
	NewFromFilePageSetupCls.Ptr = NewFromFilePageSetupPtr
	return NewFromFilePageSetupCls
}

var xNewFromGvariantPageSetup func(*glib.Variant) uintptr

// Desrialize a page setup from an a{sv} variant.
//
// The variant must be in the format produced by
// [method@Gtk.PageSetup.to_gvariant].
func NewFromGvariantPageSetup(VariantVar *glib.Variant) *PageSetup {
	NewFromGvariantPageSetupPtr := xNewFromGvariantPageSetup(VariantVar)
	if NewFromGvariantPageSetupPtr == 0 {
		return nil
	}

	NewFromGvariantPageSetupCls := &PageSetup{}
	NewFromGvariantPageSetupCls.Ptr = NewFromGvariantPageSetupPtr
	return NewFromGvariantPageSetupCls
}

var xNewFromKeyFilePageSetup func(*glib.KeyFile, string) uintptr

// Reads the page setup from the group @group_name in the key file
// @key_file.
//
// Returns a new `GtkPageSetup` object with the restored
// page setup, or %NULL if an error occurred.
func NewFromKeyFilePageSetup(KeyFileVar *glib.KeyFile, GroupNameVar string) *PageSetup {
	NewFromKeyFilePageSetupPtr := xNewFromKeyFilePageSetup(KeyFileVar, GroupNameVar)
	if NewFromKeyFilePageSetupPtr == 0 {
		return nil
	}

	NewFromKeyFilePageSetupCls := &PageSetup{}
	NewFromKeyFilePageSetupCls.Ptr = NewFromKeyFilePageSetupPtr
	return NewFromKeyFilePageSetupCls
}

var xPageSetupCopy func(uintptr) uintptr

// Copies a `GtkPageSetup`.
func (x *PageSetup) Copy() *PageSetup {

	CopyPtr := xPageSetupCopy(x.GoPointer())
	if CopyPtr == 0 {
		return nil
	}

	CopyCls := &PageSetup{}
	CopyCls.Ptr = CopyPtr
	return CopyCls

}

var xPageSetupGetBottomMargin func(uintptr, Unit) float64

// Gets the bottom margin in units of @unit.
func (x *PageSetup) GetBottomMargin(UnitVar Unit) float64 {

	return xPageSetupGetBottomMargin(x.GoPointer(), UnitVar)

}

var xPageSetupGetLeftMargin func(uintptr, Unit) float64

// Gets the left margin in units of @unit.
func (x *PageSetup) GetLeftMargin(UnitVar Unit) float64 {

	return xPageSetupGetLeftMargin(x.GoPointer(), UnitVar)

}

var xPageSetupGetOrientation func(uintptr) PageOrientation

// Gets the page orientation of the `GtkPageSetup`.
func (x *PageSetup) GetOrientation() PageOrientation {

	return xPageSetupGetOrientation(x.GoPointer())

}

var xPageSetupGetPageHeight func(uintptr, Unit) float64

// Returns the page height in units of @unit.
//
// Note that this function takes orientation
// and margins into consideration.
// See [method@Gtk.PageSetup.get_paper_height].
func (x *PageSetup) GetPageHeight(UnitVar Unit) float64 {

	return xPageSetupGetPageHeight(x.GoPointer(), UnitVar)

}

var xPageSetupGetPageWidth func(uintptr, Unit) float64

// Returns the page width in units of @unit.
//
// Note that this function takes orientation
// and margins into consideration.
// See [method@Gtk.PageSetup.get_paper_width].
func (x *PageSetup) GetPageWidth(UnitVar Unit) float64 {

	return xPageSetupGetPageWidth(x.GoPointer(), UnitVar)

}

var xPageSetupGetPaperHeight func(uintptr, Unit) float64

// Returns the paper height in units of @unit.
//
// Note that this function takes orientation,
// but not margins into consideration.
// See [method@Gtk.PageSetup.get_page_height].
func (x *PageSetup) GetPaperHeight(UnitVar Unit) float64 {

	return xPageSetupGetPaperHeight(x.GoPointer(), UnitVar)

}

var xPageSetupGetPaperSize func(uintptr) *PaperSize

// Gets the paper size of the `GtkPageSetup`.
func (x *PageSetup) GetPaperSize() *PaperSize {

	return xPageSetupGetPaperSize(x.GoPointer())

}

var xPageSetupGetPaperWidth func(uintptr, Unit) float64

// Returns the paper width in units of @unit.
//
// Note that this function takes orientation,
// but not margins into consideration.
// See [method@Gtk.PageSetup.get_page_width].
func (x *PageSetup) GetPaperWidth(UnitVar Unit) float64 {

	return xPageSetupGetPaperWidth(x.GoPointer(), UnitVar)

}

var xPageSetupGetRightMargin func(uintptr, Unit) float64

// Gets the right margin in units of @unit.
func (x *PageSetup) GetRightMargin(UnitVar Unit) float64 {

	return xPageSetupGetRightMargin(x.GoPointer(), UnitVar)

}

var xPageSetupGetTopMargin func(uintptr, Unit) float64

// Gets the top margin in units of @unit.
func (x *PageSetup) GetTopMargin(UnitVar Unit) float64 {

	return xPageSetupGetTopMargin(x.GoPointer(), UnitVar)

}

var xPageSetupLoadFile func(uintptr, string) bool

// Reads the page setup from the file @file_name.
//
// See [method@Gtk.PageSetup.to_file].
func (x *PageSetup) LoadFile(FileNameVar string) bool {

	return xPageSetupLoadFile(x.GoPointer(), FileNameVar)

}

var xPageSetupLoadKeyFile func(uintptr, *glib.KeyFile, string) bool

// Reads the page setup from the group @group_name in the key file
// @key_file.
func (x *PageSetup) LoadKeyFile(KeyFileVar *glib.KeyFile, GroupNameVar string) bool {

	return xPageSetupLoadKeyFile(x.GoPointer(), KeyFileVar, GroupNameVar)

}

var xPageSetupSetBottomMargin func(uintptr, float64, Unit)

// Sets the bottom margin of the `GtkPageSetup`.
func (x *PageSetup) SetBottomMargin(MarginVar float64, UnitVar Unit) {

	xPageSetupSetBottomMargin(x.GoPointer(), MarginVar, UnitVar)

}

var xPageSetupSetLeftMargin func(uintptr, float64, Unit)

// Sets the left margin of the `GtkPageSetup`.
func (x *PageSetup) SetLeftMargin(MarginVar float64, UnitVar Unit) {

	xPageSetupSetLeftMargin(x.GoPointer(), MarginVar, UnitVar)

}

var xPageSetupSetOrientation func(uintptr, PageOrientation)

// Sets the page orientation of the `GtkPageSetup`.
func (x *PageSetup) SetOrientation(OrientationVar PageOrientation) {

	xPageSetupSetOrientation(x.GoPointer(), OrientationVar)

}

var xPageSetupSetPaperSize func(uintptr, *PaperSize)

// Sets the paper size of the `GtkPageSetup` without
// changing the margins.
//
// See [method@Gtk.PageSetup.set_paper_size_and_default_margins].
func (x *PageSetup) SetPaperSize(SizeVar *PaperSize) {

	xPageSetupSetPaperSize(x.GoPointer(), SizeVar)

}

var xPageSetupSetPaperSizeAndDefaultMargins func(uintptr, *PaperSize)

// Sets the paper size of the `GtkPageSetup` and modifies
// the margins according to the new paper size.
func (x *PageSetup) SetPaperSizeAndDefaultMargins(SizeVar *PaperSize) {

	xPageSetupSetPaperSizeAndDefaultMargins(x.GoPointer(), SizeVar)

}

var xPageSetupSetRightMargin func(uintptr, float64, Unit)

// Sets the right margin of the `GtkPageSetup`.
func (x *PageSetup) SetRightMargin(MarginVar float64, UnitVar Unit) {

	xPageSetupSetRightMargin(x.GoPointer(), MarginVar, UnitVar)

}

var xPageSetupSetTopMargin func(uintptr, float64, Unit)

// Sets the top margin of the `GtkPageSetup`.
func (x *PageSetup) SetTopMargin(MarginVar float64, UnitVar Unit) {

	xPageSetupSetTopMargin(x.GoPointer(), MarginVar, UnitVar)

}

var xPageSetupToFile func(uintptr, string) bool

// This function saves the information from @setup to @file_name.
func (x *PageSetup) ToFile(FileNameVar string) bool {

	return xPageSetupToFile(x.GoPointer(), FileNameVar)

}

var xPageSetupToGvariant func(uintptr) *glib.Variant

// Serialize page setup to an a{sv} variant.
func (x *PageSetup) ToGvariant() *glib.Variant {

	return xPageSetupToGvariant(x.GoPointer())

}

var xPageSetupToKeyFile func(uintptr, *glib.KeyFile, string)

// This function adds the page setup from @setup to @key_file.
func (x *PageSetup) ToKeyFile(KeyFileVar *glib.KeyFile, GroupNameVar string) {

	xPageSetupToKeyFile(x.GoPointer(), KeyFileVar, GroupNameVar)

}

func (c *PageSetup) GoPointer() uintptr {
	return c.Ptr
}

func (c *PageSetup) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xNewPageSetup, lib, "gtk_page_setup_new")
	core.PuregoSafeRegister(&xNewFromFilePageSetup, lib, "gtk_page_setup_new_from_file")
	core.PuregoSafeRegister(&xNewFromGvariantPageSetup, lib, "gtk_page_setup_new_from_gvariant")
	core.PuregoSafeRegister(&xNewFromKeyFilePageSetup, lib, "gtk_page_setup_new_from_key_file")

	core.PuregoSafeRegister(&xPageSetupCopy, lib, "gtk_page_setup_copy")
	core.PuregoSafeRegister(&xPageSetupGetBottomMargin, lib, "gtk_page_setup_get_bottom_margin")
	core.PuregoSafeRegister(&xPageSetupGetLeftMargin, lib, "gtk_page_setup_get_left_margin")
	core.PuregoSafeRegister(&xPageSetupGetOrientation, lib, "gtk_page_setup_get_orientation")
	core.PuregoSafeRegister(&xPageSetupGetPageHeight, lib, "gtk_page_setup_get_page_height")
	core.PuregoSafeRegister(&xPageSetupGetPageWidth, lib, "gtk_page_setup_get_page_width")
	core.PuregoSafeRegister(&xPageSetupGetPaperHeight, lib, "gtk_page_setup_get_paper_height")
	core.PuregoSafeRegister(&xPageSetupGetPaperSize, lib, "gtk_page_setup_get_paper_size")
	core.PuregoSafeRegister(&xPageSetupGetPaperWidth, lib, "gtk_page_setup_get_paper_width")
	core.PuregoSafeRegister(&xPageSetupGetRightMargin, lib, "gtk_page_setup_get_right_margin")
	core.PuregoSafeRegister(&xPageSetupGetTopMargin, lib, "gtk_page_setup_get_top_margin")
	core.PuregoSafeRegister(&xPageSetupLoadFile, lib, "gtk_page_setup_load_file")
	core.PuregoSafeRegister(&xPageSetupLoadKeyFile, lib, "gtk_page_setup_load_key_file")
	core.PuregoSafeRegister(&xPageSetupSetBottomMargin, lib, "gtk_page_setup_set_bottom_margin")
	core.PuregoSafeRegister(&xPageSetupSetLeftMargin, lib, "gtk_page_setup_set_left_margin")
	core.PuregoSafeRegister(&xPageSetupSetOrientation, lib, "gtk_page_setup_set_orientation")
	core.PuregoSafeRegister(&xPageSetupSetPaperSize, lib, "gtk_page_setup_set_paper_size")
	core.PuregoSafeRegister(&xPageSetupSetPaperSizeAndDefaultMargins, lib, "gtk_page_setup_set_paper_size_and_default_margins")
	core.PuregoSafeRegister(&xPageSetupSetRightMargin, lib, "gtk_page_setup_set_right_margin")
	core.PuregoSafeRegister(&xPageSetupSetTopMargin, lib, "gtk_page_setup_set_top_margin")
	core.PuregoSafeRegister(&xPageSetupToFile, lib, "gtk_page_setup_to_file")
	core.PuregoSafeRegister(&xPageSetupToGvariant, lib, "gtk_page_setup_to_gvariant")
	core.PuregoSafeRegister(&xPageSetupToKeyFile, lib, "gtk_page_setup_to_key_file")

}
