// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/glib"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

type PrintSettingsFunc func(string, string, uintptr)

// A range of pages to print.
//
// See also [method@Gtk.PrintSettings.set_page_ranges].
type PageRange struct {
	Start int32

	End int32
}

// A `GtkPrintSettings` object represents the settings of a print dialog in
// a system-independent way.
//
// The main use for this object is that once you’ve printed you can get a
// settings object that represents the settings the user chose, and the next
// time you print you can pass that object in so that the user doesn’t have
// to re-set all his settings.
//
// Its also possible to enumerate the settings so that you can easily save
// the settings for the next time your app runs, or even store them in a
// document. The predefined keys try to use shared values as much as possible
// so that moving such a document between systems still works.
type PrintSettings struct {
	gobject.Object
}

func PrintSettingsNewFromInternalPtr(ptr uintptr) *PrintSettings {
	cls := &PrintSettings{}
	cls.Ptr = ptr
	return cls
}

var xNewPrintSettings func() uintptr

// Creates a new `GtkPrintSettings` object.
func NewPrintSettings() *PrintSettings {
	NewPrintSettingsPtr := xNewPrintSettings()
	if NewPrintSettingsPtr == 0 {
		return nil
	}

	NewPrintSettingsCls := &PrintSettings{}
	NewPrintSettingsCls.Ptr = NewPrintSettingsPtr
	return NewPrintSettingsCls
}

var xNewFromFilePrintSettings func(string) uintptr

// Reads the print settings from @file_name.
//
// Returns a new `GtkPrintSettings` object with the restored settings,
// or %NULL if an error occurred. If the file could not be loaded then
// error is set to either a `GFileError` or `GKeyFileError`.
//
// See [method@Gtk.PrintSettings.to_file].
func NewFromFilePrintSettings(FileNameVar string) *PrintSettings {
	NewFromFilePrintSettingsPtr := xNewFromFilePrintSettings(FileNameVar)
	if NewFromFilePrintSettingsPtr == 0 {
		return nil
	}

	NewFromFilePrintSettingsCls := &PrintSettings{}
	NewFromFilePrintSettingsCls.Ptr = NewFromFilePrintSettingsPtr
	return NewFromFilePrintSettingsCls
}

var xNewFromGvariantPrintSettings func(*glib.Variant) uintptr

// Deserialize print settings from an a{sv} variant.
//
// The variant must be in the format produced by
// [method@Gtk.PrintSettings.to_gvariant].
func NewFromGvariantPrintSettings(VariantVar *glib.Variant) *PrintSettings {
	NewFromGvariantPrintSettingsPtr := xNewFromGvariantPrintSettings(VariantVar)
	if NewFromGvariantPrintSettingsPtr == 0 {
		return nil
	}

	NewFromGvariantPrintSettingsCls := &PrintSettings{}
	NewFromGvariantPrintSettingsCls.Ptr = NewFromGvariantPrintSettingsPtr
	return NewFromGvariantPrintSettingsCls
}

var xNewFromKeyFilePrintSettings func(*glib.KeyFile, string) uintptr

// Reads the print settings from the group @group_name in @key_file.
//
// Returns a new `GtkPrintSettings` object with the restored settings,
// or %NULL if an error occurred. If the file could not be loaded then
// error is set to either `GFileError` or `GKeyFileError`.
func NewFromKeyFilePrintSettings(KeyFileVar *glib.KeyFile, GroupNameVar string) *PrintSettings {
	NewFromKeyFilePrintSettingsPtr := xNewFromKeyFilePrintSettings(KeyFileVar, GroupNameVar)
	if NewFromKeyFilePrintSettingsPtr == 0 {
		return nil
	}

	NewFromKeyFilePrintSettingsCls := &PrintSettings{}
	NewFromKeyFilePrintSettingsCls.Ptr = NewFromKeyFilePrintSettingsPtr
	return NewFromKeyFilePrintSettingsCls
}

var xPrintSettingsCopy func(uintptr) uintptr

// Copies a `GtkPrintSettings` object.
func (x *PrintSettings) Copy() *PrintSettings {

	CopyPtr := xPrintSettingsCopy(x.GoPointer())
	if CopyPtr == 0 {
		return nil
	}

	CopyCls := &PrintSettings{}
	CopyCls.Ptr = CopyPtr
	return CopyCls

}

var xPrintSettingsForeach func(uintptr, uintptr, uintptr)

// Calls @func for each key-value pair of @settings.
func (x *PrintSettings) Foreach(FuncVar PrintSettingsFunc, UserDataVar uintptr) {

	xPrintSettingsForeach(x.GoPointer(), purego.NewCallback(FuncVar), UserDataVar)

}

var xPrintSettingsGet func(uintptr, string) string

// Looks up the string value associated with @key.
func (x *PrintSettings) Get(KeyVar string) string {

	return xPrintSettingsGet(x.GoPointer(), KeyVar)

}

var xPrintSettingsGetBool func(uintptr, string) bool

// Returns the boolean represented by the value
// that is associated with @key.
//
// The string “true” represents %TRUE, any other
// string %FALSE.
func (x *PrintSettings) GetBool(KeyVar string) bool {

	return xPrintSettingsGetBool(x.GoPointer(), KeyVar)

}

var xPrintSettingsGetCollate func(uintptr) bool

// Gets the value of %GTK_PRINT_SETTINGS_COLLATE.
func (x *PrintSettings) GetCollate() bool {

	return xPrintSettingsGetCollate(x.GoPointer())

}

var xPrintSettingsGetDefaultSource func(uintptr) string

// Gets the value of %GTK_PRINT_SETTINGS_DEFAULT_SOURCE.
func (x *PrintSettings) GetDefaultSource() string {

	return xPrintSettingsGetDefaultSource(x.GoPointer())

}

var xPrintSettingsGetDither func(uintptr) string

// Gets the value of %GTK_PRINT_SETTINGS_DITHER.
func (x *PrintSettings) GetDither() string {

	return xPrintSettingsGetDither(x.GoPointer())

}

var xPrintSettingsGetDouble func(uintptr, string) float64

// Returns the double value associated with @key, or 0.
func (x *PrintSettings) GetDouble(KeyVar string) float64 {

	return xPrintSettingsGetDouble(x.GoPointer(), KeyVar)

}

var xPrintSettingsGetDoubleWithDefault func(uintptr, string, float64) float64

// Returns the floating point number represented by
// the value that is associated with @key, or @default_val
// if the value does not represent a floating point number.
//
// Floating point numbers are parsed with g_ascii_strtod().
func (x *PrintSettings) GetDoubleWithDefault(KeyVar string, DefVar float64) float64 {

	return xPrintSettingsGetDoubleWithDefault(x.GoPointer(), KeyVar, DefVar)

}

var xPrintSettingsGetDuplex func(uintptr) PrintDuplex

// Gets the value of %GTK_PRINT_SETTINGS_DUPLEX.
func (x *PrintSettings) GetDuplex() PrintDuplex {

	return xPrintSettingsGetDuplex(x.GoPointer())

}

var xPrintSettingsGetFinishings func(uintptr) string

// Gets the value of %GTK_PRINT_SETTINGS_FINISHINGS.
func (x *PrintSettings) GetFinishings() string {

	return xPrintSettingsGetFinishings(x.GoPointer())

}

var xPrintSettingsGetInt func(uintptr, string) int32

// Returns the integer value of @key, or 0.
func (x *PrintSettings) GetInt(KeyVar string) int32 {

	return xPrintSettingsGetInt(x.GoPointer(), KeyVar)

}

var xPrintSettingsGetIntWithDefault func(uintptr, string, int32) int32

// Returns the value of @key, interpreted as
// an integer, or the default value.
func (x *PrintSettings) GetIntWithDefault(KeyVar string, DefVar int32) int32 {

	return xPrintSettingsGetIntWithDefault(x.GoPointer(), KeyVar, DefVar)

}

var xPrintSettingsGetLength func(uintptr, string, Unit) float64

// Returns the value associated with @key, interpreted
// as a length.
//
// The returned value is converted to @units.
func (x *PrintSettings) GetLength(KeyVar string, UnitVar Unit) float64 {

	return xPrintSettingsGetLength(x.GoPointer(), KeyVar, UnitVar)

}

var xPrintSettingsGetMediaType func(uintptr) string

// Gets the value of %GTK_PRINT_SETTINGS_MEDIA_TYPE.
//
// The set of media types is defined in PWG 5101.1-2002 PWG.
func (x *PrintSettings) GetMediaType() string {

	return xPrintSettingsGetMediaType(x.GoPointer())

}

var xPrintSettingsGetNCopies func(uintptr) int32

// Gets the value of %GTK_PRINT_SETTINGS_N_COPIES.
func (x *PrintSettings) GetNCopies() int32 {

	return xPrintSettingsGetNCopies(x.GoPointer())

}

var xPrintSettingsGetNumberUp func(uintptr) int32

// Gets the value of %GTK_PRINT_SETTINGS_NUMBER_UP.
func (x *PrintSettings) GetNumberUp() int32 {

	return xPrintSettingsGetNumberUp(x.GoPointer())

}

var xPrintSettingsGetNumberUpLayout func(uintptr) NumberUpLayout

// Gets the value of %GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT.
func (x *PrintSettings) GetNumberUpLayout() NumberUpLayout {

	return xPrintSettingsGetNumberUpLayout(x.GoPointer())

}

var xPrintSettingsGetOrientation func(uintptr) PageOrientation

// Get the value of %GTK_PRINT_SETTINGS_ORIENTATION,
// converted to a `GtkPageOrientation`.
func (x *PrintSettings) GetOrientation() PageOrientation {

	return xPrintSettingsGetOrientation(x.GoPointer())

}

var xPrintSettingsGetOutputBin func(uintptr) string

// Gets the value of %GTK_PRINT_SETTINGS_OUTPUT_BIN.
func (x *PrintSettings) GetOutputBin() string {

	return xPrintSettingsGetOutputBin(x.GoPointer())

}

var xPrintSettingsGetPageRanges func(uintptr, int32) uintptr

// Gets the value of %GTK_PRINT_SETTINGS_PAGE_RANGES.
func (x *PrintSettings) GetPageRanges(NumRangesVar int32) uintptr {

	return xPrintSettingsGetPageRanges(x.GoPointer(), NumRangesVar)

}

var xPrintSettingsGetPageSet func(uintptr) PageSet

// Gets the value of %GTK_PRINT_SETTINGS_PAGE_SET.
func (x *PrintSettings) GetPageSet() PageSet {

	return xPrintSettingsGetPageSet(x.GoPointer())

}

var xPrintSettingsGetPaperHeight func(uintptr, Unit) float64

// Gets the value of %GTK_PRINT_SETTINGS_PAPER_HEIGHT,
// converted to @unit.
func (x *PrintSettings) GetPaperHeight(UnitVar Unit) float64 {

	return xPrintSettingsGetPaperHeight(x.GoPointer(), UnitVar)

}

var xPrintSettingsGetPaperSize func(uintptr) *PaperSize

// Gets the value of %GTK_PRINT_SETTINGS_PAPER_FORMAT,
// converted to a `GtkPaperSize`.
func (x *PrintSettings) GetPaperSize() *PaperSize {

	return xPrintSettingsGetPaperSize(x.GoPointer())

}

var xPrintSettingsGetPaperWidth func(uintptr, Unit) float64

// Gets the value of %GTK_PRINT_SETTINGS_PAPER_WIDTH,
// converted to @unit.
func (x *PrintSettings) GetPaperWidth(UnitVar Unit) float64 {

	return xPrintSettingsGetPaperWidth(x.GoPointer(), UnitVar)

}

var xPrintSettingsGetPrintPages func(uintptr) PrintPages

// Gets the value of %GTK_PRINT_SETTINGS_PRINT_PAGES.
func (x *PrintSettings) GetPrintPages() PrintPages {

	return xPrintSettingsGetPrintPages(x.GoPointer())

}

var xPrintSettingsGetPrinter func(uintptr) string

// Convenience function to obtain the value of
// %GTK_PRINT_SETTINGS_PRINTER.
func (x *PrintSettings) GetPrinter() string {

	return xPrintSettingsGetPrinter(x.GoPointer())

}

var xPrintSettingsGetPrinterLpi func(uintptr) float64

// Gets the value of %GTK_PRINT_SETTINGS_PRINTER_LPI.
func (x *PrintSettings) GetPrinterLpi() float64 {

	return xPrintSettingsGetPrinterLpi(x.GoPointer())

}

var xPrintSettingsGetQuality func(uintptr) PrintQuality

// Gets the value of %GTK_PRINT_SETTINGS_QUALITY.
func (x *PrintSettings) GetQuality() PrintQuality {

	return xPrintSettingsGetQuality(x.GoPointer())

}

var xPrintSettingsGetResolution func(uintptr) int32

// Gets the value of %GTK_PRINT_SETTINGS_RESOLUTION.
func (x *PrintSettings) GetResolution() int32 {

	return xPrintSettingsGetResolution(x.GoPointer())

}

var xPrintSettingsGetResolutionX func(uintptr) int32

// Gets the value of %GTK_PRINT_SETTINGS_RESOLUTION_X.
func (x *PrintSettings) GetResolutionX() int32 {

	return xPrintSettingsGetResolutionX(x.GoPointer())

}

var xPrintSettingsGetResolutionY func(uintptr) int32

// Gets the value of %GTK_PRINT_SETTINGS_RESOLUTION_Y.
func (x *PrintSettings) GetResolutionY() int32 {

	return xPrintSettingsGetResolutionY(x.GoPointer())

}

var xPrintSettingsGetReverse func(uintptr) bool

// Gets the value of %GTK_PRINT_SETTINGS_REVERSE.
func (x *PrintSettings) GetReverse() bool {

	return xPrintSettingsGetReverse(x.GoPointer())

}

var xPrintSettingsGetScale func(uintptr) float64

// Gets the value of %GTK_PRINT_SETTINGS_SCALE.
func (x *PrintSettings) GetScale() float64 {

	return xPrintSettingsGetScale(x.GoPointer())

}

var xPrintSettingsGetUseColor func(uintptr) bool

// Gets the value of %GTK_PRINT_SETTINGS_USE_COLOR.
func (x *PrintSettings) GetUseColor() bool {

	return xPrintSettingsGetUseColor(x.GoPointer())

}

var xPrintSettingsHasKey func(uintptr, string) bool

// Returns %TRUE, if a value is associated with @key.
func (x *PrintSettings) HasKey(KeyVar string) bool {

	return xPrintSettingsHasKey(x.GoPointer(), KeyVar)

}

var xPrintSettingsLoadFile func(uintptr, string) bool

// Reads the print settings from @file_name.
//
// If the file could not be loaded then error is set to either
// a `GFileError` or `GKeyFileError`.
//
// See [method@Gtk.PrintSettings.to_file].
func (x *PrintSettings) LoadFile(FileNameVar string) bool {

	return xPrintSettingsLoadFile(x.GoPointer(), FileNameVar)

}

var xPrintSettingsLoadKeyFile func(uintptr, *glib.KeyFile, string) bool

// Reads the print settings from the group @group_name in @key_file.
//
// If the file could not be loaded then error is set to either a
// `GFileError` or `GKeyFileError`.
func (x *PrintSettings) LoadKeyFile(KeyFileVar *glib.KeyFile, GroupNameVar string) bool {

	return xPrintSettingsLoadKeyFile(x.GoPointer(), KeyFileVar, GroupNameVar)

}

var xPrintSettingsSet func(uintptr, string, string)

// Associates @value with @key.
func (x *PrintSettings) Set(KeyVar string, ValueVar string) {

	xPrintSettingsSet(x.GoPointer(), KeyVar, ValueVar)

}

var xPrintSettingsSetBool func(uintptr, string, bool)

// Sets @key to a boolean value.
func (x *PrintSettings) SetBool(KeyVar string, ValueVar bool) {

	xPrintSettingsSetBool(x.GoPointer(), KeyVar, ValueVar)

}

var xPrintSettingsSetCollate func(uintptr, bool)

// Sets the value of %GTK_PRINT_SETTINGS_COLLATE.
func (x *PrintSettings) SetCollate(CollateVar bool) {

	xPrintSettingsSetCollate(x.GoPointer(), CollateVar)

}

var xPrintSettingsSetDefaultSource func(uintptr, string)

// Sets the value of %GTK_PRINT_SETTINGS_DEFAULT_SOURCE.
func (x *PrintSettings) SetDefaultSource(DefaultSourceVar string) {

	xPrintSettingsSetDefaultSource(x.GoPointer(), DefaultSourceVar)

}

var xPrintSettingsSetDither func(uintptr, string)

// Sets the value of %GTK_PRINT_SETTINGS_DITHER.
func (x *PrintSettings) SetDither(DitherVar string) {

	xPrintSettingsSetDither(x.GoPointer(), DitherVar)

}

var xPrintSettingsSetDouble func(uintptr, string, float64)

// Sets @key to a double value.
func (x *PrintSettings) SetDouble(KeyVar string, ValueVar float64) {

	xPrintSettingsSetDouble(x.GoPointer(), KeyVar, ValueVar)

}

var xPrintSettingsSetDuplex func(uintptr, PrintDuplex)

// Sets the value of %GTK_PRINT_SETTINGS_DUPLEX.
func (x *PrintSettings) SetDuplex(DuplexVar PrintDuplex) {

	xPrintSettingsSetDuplex(x.GoPointer(), DuplexVar)

}

var xPrintSettingsSetFinishings func(uintptr, string)

// Sets the value of %GTK_PRINT_SETTINGS_FINISHINGS.
func (x *PrintSettings) SetFinishings(FinishingsVar string) {

	xPrintSettingsSetFinishings(x.GoPointer(), FinishingsVar)

}

var xPrintSettingsSetInt func(uintptr, string, int32)

// Sets @key to an integer value.
func (x *PrintSettings) SetInt(KeyVar string, ValueVar int32) {

	xPrintSettingsSetInt(x.GoPointer(), KeyVar, ValueVar)

}

var xPrintSettingsSetLength func(uintptr, string, float64, Unit)

// Associates a length in units of @unit with @key.
func (x *PrintSettings) SetLength(KeyVar string, ValueVar float64, UnitVar Unit) {

	xPrintSettingsSetLength(x.GoPointer(), KeyVar, ValueVar, UnitVar)

}

var xPrintSettingsSetMediaType func(uintptr, string)

// Sets the value of %GTK_PRINT_SETTINGS_MEDIA_TYPE.
//
// The set of media types is defined in PWG 5101.1-2002 PWG.
func (x *PrintSettings) SetMediaType(MediaTypeVar string) {

	xPrintSettingsSetMediaType(x.GoPointer(), MediaTypeVar)

}

var xPrintSettingsSetNCopies func(uintptr, int32)

// Sets the value of %GTK_PRINT_SETTINGS_N_COPIES.
func (x *PrintSettings) SetNCopies(NumCopiesVar int32) {

	xPrintSettingsSetNCopies(x.GoPointer(), NumCopiesVar)

}

var xPrintSettingsSetNumberUp func(uintptr, int32)

// Sets the value of %GTK_PRINT_SETTINGS_NUMBER_UP.
func (x *PrintSettings) SetNumberUp(NumberUpVar int32) {

	xPrintSettingsSetNumberUp(x.GoPointer(), NumberUpVar)

}

var xPrintSettingsSetNumberUpLayout func(uintptr, NumberUpLayout)

// Sets the value of %GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT.
func (x *PrintSettings) SetNumberUpLayout(NumberUpLayoutVar NumberUpLayout) {

	xPrintSettingsSetNumberUpLayout(x.GoPointer(), NumberUpLayoutVar)

}

var xPrintSettingsSetOrientation func(uintptr, PageOrientation)

// Sets the value of %GTK_PRINT_SETTINGS_ORIENTATION.
func (x *PrintSettings) SetOrientation(OrientationVar PageOrientation) {

	xPrintSettingsSetOrientation(x.GoPointer(), OrientationVar)

}

var xPrintSettingsSetOutputBin func(uintptr, string)

// Sets the value of %GTK_PRINT_SETTINGS_OUTPUT_BIN.
func (x *PrintSettings) SetOutputBin(OutputBinVar string) {

	xPrintSettingsSetOutputBin(x.GoPointer(), OutputBinVar)

}

var xPrintSettingsSetPageRanges func(uintptr, uintptr, int32)

// Sets the value of %GTK_PRINT_SETTINGS_PAGE_RANGES.
func (x *PrintSettings) SetPageRanges(PageRangesVar uintptr, NumRangesVar int32) {

	xPrintSettingsSetPageRanges(x.GoPointer(), PageRangesVar, NumRangesVar)

}

var xPrintSettingsSetPageSet func(uintptr, PageSet)

// Sets the value of %GTK_PRINT_SETTINGS_PAGE_SET.
func (x *PrintSettings) SetPageSet(PageSetVar PageSet) {

	xPrintSettingsSetPageSet(x.GoPointer(), PageSetVar)

}

var xPrintSettingsSetPaperHeight func(uintptr, float64, Unit)

// Sets the value of %GTK_PRINT_SETTINGS_PAPER_HEIGHT.
func (x *PrintSettings) SetPaperHeight(HeightVar float64, UnitVar Unit) {

	xPrintSettingsSetPaperHeight(x.GoPointer(), HeightVar, UnitVar)

}

var xPrintSettingsSetPaperSize func(uintptr, *PaperSize)

// Sets the value of %GTK_PRINT_SETTINGS_PAPER_FORMAT,
// %GTK_PRINT_SETTINGS_PAPER_WIDTH and
// %GTK_PRINT_SETTINGS_PAPER_HEIGHT.
func (x *PrintSettings) SetPaperSize(PaperSizeVar *PaperSize) {

	xPrintSettingsSetPaperSize(x.GoPointer(), PaperSizeVar)

}

var xPrintSettingsSetPaperWidth func(uintptr, float64, Unit)

// Sets the value of %GTK_PRINT_SETTINGS_PAPER_WIDTH.
func (x *PrintSettings) SetPaperWidth(WidthVar float64, UnitVar Unit) {

	xPrintSettingsSetPaperWidth(x.GoPointer(), WidthVar, UnitVar)

}

var xPrintSettingsSetPrintPages func(uintptr, PrintPages)

// Sets the value of %GTK_PRINT_SETTINGS_PRINT_PAGES.
func (x *PrintSettings) SetPrintPages(PagesVar PrintPages) {

	xPrintSettingsSetPrintPages(x.GoPointer(), PagesVar)

}

var xPrintSettingsSetPrinter func(uintptr, string)

// Convenience function to set %GTK_PRINT_SETTINGS_PRINTER
// to @printer.
func (x *PrintSettings) SetPrinter(PrinterVar string) {

	xPrintSettingsSetPrinter(x.GoPointer(), PrinterVar)

}

var xPrintSettingsSetPrinterLpi func(uintptr, float64)

// Sets the value of %GTK_PRINT_SETTINGS_PRINTER_LPI.
func (x *PrintSettings) SetPrinterLpi(LpiVar float64) {

	xPrintSettingsSetPrinterLpi(x.GoPointer(), LpiVar)

}

var xPrintSettingsSetQuality func(uintptr, PrintQuality)

// Sets the value of %GTK_PRINT_SETTINGS_QUALITY.
func (x *PrintSettings) SetQuality(QualityVar PrintQuality) {

	xPrintSettingsSetQuality(x.GoPointer(), QualityVar)

}

var xPrintSettingsSetResolution func(uintptr, int32)

// Sets the values of %GTK_PRINT_SETTINGS_RESOLUTION,
// %GTK_PRINT_SETTINGS_RESOLUTION_X and
// %GTK_PRINT_SETTINGS_RESOLUTION_Y.
func (x *PrintSettings) SetResolution(ResolutionVar int32) {

	xPrintSettingsSetResolution(x.GoPointer(), ResolutionVar)

}

var xPrintSettingsSetResolutionXy func(uintptr, int32, int32)

// Sets the values of %GTK_PRINT_SETTINGS_RESOLUTION,
// %GTK_PRINT_SETTINGS_RESOLUTION_X and
// %GTK_PRINT_SETTINGS_RESOLUTION_Y.
func (x *PrintSettings) SetResolutionXy(ResolutionXVar int32, ResolutionYVar int32) {

	xPrintSettingsSetResolutionXy(x.GoPointer(), ResolutionXVar, ResolutionYVar)

}

var xPrintSettingsSetReverse func(uintptr, bool)

// Sets the value of %GTK_PRINT_SETTINGS_REVERSE.
func (x *PrintSettings) SetReverse(ReverseVar bool) {

	xPrintSettingsSetReverse(x.GoPointer(), ReverseVar)

}

var xPrintSettingsSetScale func(uintptr, float64)

// Sets the value of %GTK_PRINT_SETTINGS_SCALE.
func (x *PrintSettings) SetScale(ScaleVar float64) {

	xPrintSettingsSetScale(x.GoPointer(), ScaleVar)

}

var xPrintSettingsSetUseColor func(uintptr, bool)

// Sets the value of %GTK_PRINT_SETTINGS_USE_COLOR.
func (x *PrintSettings) SetUseColor(UseColorVar bool) {

	xPrintSettingsSetUseColor(x.GoPointer(), UseColorVar)

}

var xPrintSettingsToFile func(uintptr, string) bool

// This function saves the print settings from @settings to @file_name.
//
// If the file could not be written then error is set to either a
// `GFileError` or `GKeyFileError`.
func (x *PrintSettings) ToFile(FileNameVar string) bool {

	return xPrintSettingsToFile(x.GoPointer(), FileNameVar)

}

var xPrintSettingsToGvariant func(uintptr) *glib.Variant

// Serialize print settings to an a{sv} variant.
func (x *PrintSettings) ToGvariant() *glib.Variant {

	return xPrintSettingsToGvariant(x.GoPointer())

}

var xPrintSettingsToKeyFile func(uintptr, *glib.KeyFile, string)

// This function adds the print settings from @settings to @key_file.
func (x *PrintSettings) ToKeyFile(KeyFileVar *glib.KeyFile, GroupNameVar string) {

	xPrintSettingsToKeyFile(x.GoPointer(), KeyFileVar, GroupNameVar)

}

var xPrintSettingsUnset func(uintptr, string)

// Removes any value associated with @key.
//
// This has the same effect as setting the value to %NULL.
func (x *PrintSettings) Unset(KeyVar string) {

	xPrintSettingsUnset(x.GoPointer(), KeyVar)

}

func (c *PrintSettings) GoPointer() uintptr {
	return c.Ptr
}

func (c *PrintSettings) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xNewPrintSettings, lib, "gtk_print_settings_new")
	core.PuregoSafeRegister(&xNewFromFilePrintSettings, lib, "gtk_print_settings_new_from_file")
	core.PuregoSafeRegister(&xNewFromGvariantPrintSettings, lib, "gtk_print_settings_new_from_gvariant")
	core.PuregoSafeRegister(&xNewFromKeyFilePrintSettings, lib, "gtk_print_settings_new_from_key_file")

	core.PuregoSafeRegister(&xPrintSettingsCopy, lib, "gtk_print_settings_copy")
	core.PuregoSafeRegister(&xPrintSettingsForeach, lib, "gtk_print_settings_foreach")
	core.PuregoSafeRegister(&xPrintSettingsGet, lib, "gtk_print_settings_get")
	core.PuregoSafeRegister(&xPrintSettingsGetBool, lib, "gtk_print_settings_get_bool")
	core.PuregoSafeRegister(&xPrintSettingsGetCollate, lib, "gtk_print_settings_get_collate")
	core.PuregoSafeRegister(&xPrintSettingsGetDefaultSource, lib, "gtk_print_settings_get_default_source")
	core.PuregoSafeRegister(&xPrintSettingsGetDither, lib, "gtk_print_settings_get_dither")
	core.PuregoSafeRegister(&xPrintSettingsGetDouble, lib, "gtk_print_settings_get_double")
	core.PuregoSafeRegister(&xPrintSettingsGetDoubleWithDefault, lib, "gtk_print_settings_get_double_with_default")
	core.PuregoSafeRegister(&xPrintSettingsGetDuplex, lib, "gtk_print_settings_get_duplex")
	core.PuregoSafeRegister(&xPrintSettingsGetFinishings, lib, "gtk_print_settings_get_finishings")
	core.PuregoSafeRegister(&xPrintSettingsGetInt, lib, "gtk_print_settings_get_int")
	core.PuregoSafeRegister(&xPrintSettingsGetIntWithDefault, lib, "gtk_print_settings_get_int_with_default")
	core.PuregoSafeRegister(&xPrintSettingsGetLength, lib, "gtk_print_settings_get_length")
	core.PuregoSafeRegister(&xPrintSettingsGetMediaType, lib, "gtk_print_settings_get_media_type")
	core.PuregoSafeRegister(&xPrintSettingsGetNCopies, lib, "gtk_print_settings_get_n_copies")
	core.PuregoSafeRegister(&xPrintSettingsGetNumberUp, lib, "gtk_print_settings_get_number_up")
	core.PuregoSafeRegister(&xPrintSettingsGetNumberUpLayout, lib, "gtk_print_settings_get_number_up_layout")
	core.PuregoSafeRegister(&xPrintSettingsGetOrientation, lib, "gtk_print_settings_get_orientation")
	core.PuregoSafeRegister(&xPrintSettingsGetOutputBin, lib, "gtk_print_settings_get_output_bin")
	core.PuregoSafeRegister(&xPrintSettingsGetPageRanges, lib, "gtk_print_settings_get_page_ranges")
	core.PuregoSafeRegister(&xPrintSettingsGetPageSet, lib, "gtk_print_settings_get_page_set")
	core.PuregoSafeRegister(&xPrintSettingsGetPaperHeight, lib, "gtk_print_settings_get_paper_height")
	core.PuregoSafeRegister(&xPrintSettingsGetPaperSize, lib, "gtk_print_settings_get_paper_size")
	core.PuregoSafeRegister(&xPrintSettingsGetPaperWidth, lib, "gtk_print_settings_get_paper_width")
	core.PuregoSafeRegister(&xPrintSettingsGetPrintPages, lib, "gtk_print_settings_get_print_pages")
	core.PuregoSafeRegister(&xPrintSettingsGetPrinter, lib, "gtk_print_settings_get_printer")
	core.PuregoSafeRegister(&xPrintSettingsGetPrinterLpi, lib, "gtk_print_settings_get_printer_lpi")
	core.PuregoSafeRegister(&xPrintSettingsGetQuality, lib, "gtk_print_settings_get_quality")
	core.PuregoSafeRegister(&xPrintSettingsGetResolution, lib, "gtk_print_settings_get_resolution")
	core.PuregoSafeRegister(&xPrintSettingsGetResolutionX, lib, "gtk_print_settings_get_resolution_x")
	core.PuregoSafeRegister(&xPrintSettingsGetResolutionY, lib, "gtk_print_settings_get_resolution_y")
	core.PuregoSafeRegister(&xPrintSettingsGetReverse, lib, "gtk_print_settings_get_reverse")
	core.PuregoSafeRegister(&xPrintSettingsGetScale, lib, "gtk_print_settings_get_scale")
	core.PuregoSafeRegister(&xPrintSettingsGetUseColor, lib, "gtk_print_settings_get_use_color")
	core.PuregoSafeRegister(&xPrintSettingsHasKey, lib, "gtk_print_settings_has_key")
	core.PuregoSafeRegister(&xPrintSettingsLoadFile, lib, "gtk_print_settings_load_file")
	core.PuregoSafeRegister(&xPrintSettingsLoadKeyFile, lib, "gtk_print_settings_load_key_file")
	core.PuregoSafeRegister(&xPrintSettingsSet, lib, "gtk_print_settings_set")
	core.PuregoSafeRegister(&xPrintSettingsSetBool, lib, "gtk_print_settings_set_bool")
	core.PuregoSafeRegister(&xPrintSettingsSetCollate, lib, "gtk_print_settings_set_collate")
	core.PuregoSafeRegister(&xPrintSettingsSetDefaultSource, lib, "gtk_print_settings_set_default_source")
	core.PuregoSafeRegister(&xPrintSettingsSetDither, lib, "gtk_print_settings_set_dither")
	core.PuregoSafeRegister(&xPrintSettingsSetDouble, lib, "gtk_print_settings_set_double")
	core.PuregoSafeRegister(&xPrintSettingsSetDuplex, lib, "gtk_print_settings_set_duplex")
	core.PuregoSafeRegister(&xPrintSettingsSetFinishings, lib, "gtk_print_settings_set_finishings")
	core.PuregoSafeRegister(&xPrintSettingsSetInt, lib, "gtk_print_settings_set_int")
	core.PuregoSafeRegister(&xPrintSettingsSetLength, lib, "gtk_print_settings_set_length")
	core.PuregoSafeRegister(&xPrintSettingsSetMediaType, lib, "gtk_print_settings_set_media_type")
	core.PuregoSafeRegister(&xPrintSettingsSetNCopies, lib, "gtk_print_settings_set_n_copies")
	core.PuregoSafeRegister(&xPrintSettingsSetNumberUp, lib, "gtk_print_settings_set_number_up")
	core.PuregoSafeRegister(&xPrintSettingsSetNumberUpLayout, lib, "gtk_print_settings_set_number_up_layout")
	core.PuregoSafeRegister(&xPrintSettingsSetOrientation, lib, "gtk_print_settings_set_orientation")
	core.PuregoSafeRegister(&xPrintSettingsSetOutputBin, lib, "gtk_print_settings_set_output_bin")
	core.PuregoSafeRegister(&xPrintSettingsSetPageRanges, lib, "gtk_print_settings_set_page_ranges")
	core.PuregoSafeRegister(&xPrintSettingsSetPageSet, lib, "gtk_print_settings_set_page_set")
	core.PuregoSafeRegister(&xPrintSettingsSetPaperHeight, lib, "gtk_print_settings_set_paper_height")
	core.PuregoSafeRegister(&xPrintSettingsSetPaperSize, lib, "gtk_print_settings_set_paper_size")
	core.PuregoSafeRegister(&xPrintSettingsSetPaperWidth, lib, "gtk_print_settings_set_paper_width")
	core.PuregoSafeRegister(&xPrintSettingsSetPrintPages, lib, "gtk_print_settings_set_print_pages")
	core.PuregoSafeRegister(&xPrintSettingsSetPrinter, lib, "gtk_print_settings_set_printer")
	core.PuregoSafeRegister(&xPrintSettingsSetPrinterLpi, lib, "gtk_print_settings_set_printer_lpi")
	core.PuregoSafeRegister(&xPrintSettingsSetQuality, lib, "gtk_print_settings_set_quality")
	core.PuregoSafeRegister(&xPrintSettingsSetResolution, lib, "gtk_print_settings_set_resolution")
	core.PuregoSafeRegister(&xPrintSettingsSetResolutionXy, lib, "gtk_print_settings_set_resolution_xy")
	core.PuregoSafeRegister(&xPrintSettingsSetReverse, lib, "gtk_print_settings_set_reverse")
	core.PuregoSafeRegister(&xPrintSettingsSetScale, lib, "gtk_print_settings_set_scale")
	core.PuregoSafeRegister(&xPrintSettingsSetUseColor, lib, "gtk_print_settings_set_use_color")
	core.PuregoSafeRegister(&xPrintSettingsToFile, lib, "gtk_print_settings_to_file")
	core.PuregoSafeRegister(&xPrintSettingsToGvariant, lib, "gtk_print_settings_to_gvariant")
	core.PuregoSafeRegister(&xPrintSettingsToKeyFile, lib, "gtk_print_settings_to_key_file")
	core.PuregoSafeRegister(&xPrintSettingsUnset, lib, "gtk_print_settings_unset")

}
