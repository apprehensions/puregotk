// Package gtk was automatically generated by github.com/jwijenbergh/puregotk DO NOT EDIT
package gtk

import (
	"github.com/jwijenbergh/purego"
	"github.com/jwijenbergh/puregotk/internal/core"
	"github.com/jwijenbergh/puregotk/v4/gobject"
)

// Renders numbers as progress bars
//
// `GtkCellRendererProgress` renders a numeric value as a progress par in a cell.
// Additionally, it can display a text on top of the progress bar.
type CellRendererProgress struct {
	CellRenderer
}

func CellRendererProgressNewFromInternalPtr(ptr uintptr) *CellRendererProgress {
	cls := &CellRendererProgress{}
	cls.Ptr = ptr
	return cls
}

var xNewCellRendererProgress func() uintptr

// Creates a new `GtkCellRendererProgress`.
func NewCellRendererProgress() *CellRenderer {
	NewCellRendererProgressPtr := xNewCellRendererProgress()
	if NewCellRendererProgressPtr == 0 {
		return nil
	}

	gobject.IncreaseRef(NewCellRendererProgressPtr)

	NewCellRendererProgressCls := &CellRenderer{}
	NewCellRendererProgressCls.Ptr = NewCellRendererProgressPtr
	return NewCellRendererProgressCls
}

func (c *CellRendererProgress) GoPointer() uintptr {
	return c.Ptr
}

func (c *CellRendererProgress) SetGoPointer(ptr uintptr) {
	c.Ptr = ptr
}

// Retrieves the orientation of the @orientable.
func (x *CellRendererProgress) GetOrientation() Orientation {

	return XGtkOrientableGetOrientation(x.GoPointer())

}

// Sets the orientation of the @orientable.
func (x *CellRendererProgress) SetOrientation(OrientationVar Orientation) {

	XGtkOrientableSetOrientation(x.GoPointer(), OrientationVar)

}

func init() {
	lib, err := purego.Dlopen(core.GetPath("GTK"), purego.RTLD_NOW|purego.RTLD_GLOBAL)
	if err != nil {
		panic(err)
	}

	core.PuregoSafeRegister(&xNewCellRendererProgress, lib, "gtk_cell_renderer_progress_new")

}
